-- #1
CREATE TABLE accounts (
    id INT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(100) NOT NULL,
    credit DEC(15,2) NOT NULL,
	currency VARCHAR(100) NOT NULL,
    PRIMARY KEY(id)
);
INSERT INTO accounts(name, credit, currency)
VALUES('Bob', 10000, "dollar");
INSERT INTO accounts(name, credit, currency)
VALUES('Tom', 10000, "dollar");
INSERT INTO accounts(name, credit, currency)
VALUES('Sad', 10000, "dollar");

BEGIN;
UPDATE accounts 
SET credit = credit - 500
WHERE id = 1;

UPDATE accounts
SET credit = credit + 500
WHERE id = 2; 
COMMIT

BEGIN
UPDATE accounts 
SET credit = credit + 700
WHERE id = 1;

UPDATE accounts
SET credit = credit - 700
WHERE id = 2; 
COMMIT

BEGIN
UPDATE accounts 
SET credit = credit - 100
WHERE id = 2;

UPDATE accounts
SET credit = credit + 100
WHERE id = 3; 
COMMIT

SELECT id, name, credit, currency
FROM accounts;

-- TO create rollbacks, in the end of each transaction we should just write ROLLBACK;
COMMIT;

-- #2

CREATE TABLE transactions (
    id INT GENERATED BY DEFAULT AS IDENTITY,
	from INT,
	to INT,
	fee INT,
	amount INT,
	time TIME(6),
);

BEGIN;
UPDATE accounts 
SET credit = credit - 500
WHERE id = 1;

UPDATE accounts
SET credit = credit + 500
WHERE id = 2; 

INSERT INTO transactions(from, to, fee, amount, time)
VALUES(1, 2, 0, 500, current_timestamp;
COMMIT

BEGIN
UPDATE accounts 
SET credit = credit + 700
WHERE id = 1;

UPDATE accounts
SET credit = credit - 700
WHERE id = 2;
	   
INSERT INTO transactions(from, to, fee, amount, time)
VALUES(1, 2, 0, 700, current_timestamp;
COMMIT

BEGIN
UPDATE accounts 
SET credit = credit - 100
WHERE id = 2;

UPDATE accounts
SET credit = credit + 100
WHERE id = 3; 
	   
INSERT INTO transactions(from, to, fee, amount, time)
VALUES(2, 3, 0, 100, current_timestamp;
COMMIT
